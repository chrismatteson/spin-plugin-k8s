#!/bin/bash
set -e

help () {
    echo "
A Spin Plugin for Kubernetes

USAGE:
    spin k8s <SUBCOMMAND>

SUBCOMMANDS:
    help         Print help information
    scaffold     Scaffold a new component into an existing application
    build        Build Spin Docker Container
    push         Push Spin Docker Containter to repository
    deploy       Deploy a Spin application to Kubernetes
"
}

scaffold () {
    NAME=`grep name spin.toml | cut -d'"' -f 2`
    SOURCE=`grep source spin.toml | cut -d'"' -f 2`
    BUILD=`grep command spin.toml | cut -d'"' -f 2`
    WASM=`echo $SOURCE | rev | cut -d'/' -f 1 | rev`
    VERSION=`grep ^version spin.toml | cut -d'"' -f 2`
    NAMESPACE=$1
    NAMESPACE=$1
    if [ -z $NAMESPACE ]; then
        echo "No Docker Namespace defined"
    else
        if test -f "./Dockerfile"; then
            echo "Dockerfile already exists"
        else
            cat << EOF > ./Dockerfile
FROM --platform=\${BUILDPLATFORM} rust:1.59 AS build
WORKDIR $PWD
COPY . .
RUN rustup target add wasm32-wasi && $BUILD

FROM scratch
COPY --from=build $PWD/$SOURCE ./$SOURCE
COPY --from=build $PWD/spin.toml .
EOF
        echo "Dockerfile Created"
#    sed -i '' "s%$SOURCE%$WASM%" spin.toml
#    echo "spin.toml updated"
        fi
        if test -f "./deploy.yaml"; then
            echo "deploy.yaml already exists"
        else
        cat << EOF > ./deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $NAME
spec:
  replicas: 3
  selector:
    matchLabels:
      app: $NAME
  template:
    metadata:
      labels:
        app: $NAME
    spec:
      runtimeClassName: wasmtime-spin-v1
      containers:
        - name: $NAME
          image: $NAMESPACE/$NAME:$VERSION
          command: ["/"]
---
apiVersion: v1
kind: Service
metadata:
  name: $NAME
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: $NAME
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $NAME
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: $NAME
                port:
                  number: 80
EOF
            echo "deploy.yaml created"
        fi
    fi
}

build () {
    NAME=`grep name spin.toml | cut -d'"' -f 2`
    VERSION=`grep ^version spin.toml | cut -d'"' -f 2`
    NAMESPACE=$1
    if [ -z $NAMESPACE ]; then
        echo "No Docker Namespace defined"
    else
        docker buildx build --platform=wasi/wasm -t $NAMESPACE/$NAME .
        docker tag $NAMESPACE/$NAME:latest $NAMESPACE/$NAME:$VERSION
        echo "Image built"
    fi
}

push () {
    NAME=`grep name spin.toml | cut -d'"' -f 2`
    VERSION=`grep ^version spin.toml | cut -d'"' -f 2`
    NAMESPACE=$1
    if [ -z $NAMESPACE ]; then
        echo "No Docker Namespace defined"
    else
        echo "$NAMESPACE/$NAME:$VERSION"
        docker push $NAMESPACE/$NAME:latest
        docker push $NAMESPACE/$NAME:$VERSION
        echo "Image pushed"
    fi
}

deploy () {
    kubectl apply -f deploy.yaml
}
case "$1" in
    "") help;;
    help) help;;
    scaffold) scaffold $2;;
    build) build $2;;
    push) push $2;;
    deploy) deploy;;
    *) echo "Command not understood" && help;;
esac